max.rate.cat = 1,
pen_type = "l1",
root.p="yang")
corhmm_profile_2 <- corHMM:::get_batch_profile_lik(corhmm_obj = corhmm_fit_2,
range_factor = 10000,
n_points = 20,
ncores = 10,
dredge = FALSE)
l1_profile_2 <- corHMM:::get_batch_profile_lik(corhmm_obj = corhmm_fit_l1_2,
range_factor = 10000,
n_points = 20,
ncores = 10,
dredge = TRUE)
print("unregularized result")
corHMM:::plot_batch_profile_lik(corhmm_profile_2, ylim = c(-55, -40))
print("l1 regularized result")
corHMM:::plot_batch_profile_lik(l1_profile_2, ylim = c(-55, -40))
corHMM:::plot_batch_profile_lik(corhmm_profile_2, ylim = c(-55, -40))
print("l1 regularized result")
corHMM:::plot_batch_profile_lik(l1_profile_2, ylim = c(-55, -40))
setwd("~/Dropbox (University of Michigan)/CRE genomics/")
dat <- read.csv("CA LTACHS 2014-2015/CRKP_LTACH_df_041624.csv", row.names = 1)
orig_tree <- tree <- read.tree("CA LTACHS 2014-2015/2022_03_02_10_53_52_KPNIH1_genome_aln_w_alt_allele_unmapped.filtered_polymorphic_sites.fasta.raxml.bestTree.rr.pr")
plot(tree, show.tip.label = FALSE, type = "fan")
dich_dat <- dat[,grep("dich$", colnames(dat))]
dich_dat[dich_dat == "Susceptible" & !is.na(dich_dat)] <- "S"
dich_dat[dich_dat == "Non-Susceptible" & !is.na(dich_dat)] <- "R"
cor_dat <- cbind(rownames(dich_dat), dich_dat)
colnames(cor_dat)[1] <- "strain"
tree <- keep.tip(tree, tree$tip.label[tree$tip.label %in% cor_dat$strain])
cor_dat <- cor_dat[cor_dat$strain %in% tree$tip.label,]
cor_dat <- cor_dat[tree$tip.label,]
cor_dat[is.na(cor_dat)] <- "?"
cor_dat <- cor_dat[,!apply(cor_dat, 2, function(x) all(x == "?"))]
apply(cor_dat[,-1], 2, table)
base_mat <- getStateMat4Dat(cor_dat[,c(1,2)])$rate.mat
model_set <- list(ard = base_mat,
cov = getFullMat(list(dropStateMatPars(base_mat, c(1,2)), base_mat),
getRateCatMat(2)),
hrm = getFullMat(list(base_mat, base_mat),
getRateCatMat(2)))
library(corHMM)
library(ape)
library(RColorBrewer)
setwd("~/Dropbox (University of Michigan)/CRE genomics/")
dat <- read.csv("CA LTACHS 2014-2015/CRKP_LTACH_df_041624.csv", row.names = 1)
orig_tree <- tree <- read.tree("CA LTACHS 2014-2015/2022_03_02_10_53_52_KPNIH1_genome_aln_w_alt_allele_unmapped.filtered_polymorphic_sites.fasta.raxml.bestTree.rr.pr")
plot(tree, show.tip.label = FALSE, type = "fan")
dich_dat <- dat[,grep("dich$", colnames(dat))]
dich_dat[dich_dat == "Susceptible" & !is.na(dich_dat)] <- "S"
dich_dat[dich_dat == "Non-Susceptible" & !is.na(dich_dat)] <- "R"
cor_dat <- cbind(rownames(dich_dat), dich_dat)
colnames(cor_dat)[1] <- "strain"
tree <- keep.tip(tree, tree$tip.label[tree$tip.label %in% cor_dat$strain])
cor_dat <- cor_dat[cor_dat$strain %in% tree$tip.label,]
cor_dat <- cor_dat[tree$tip.label,]
cor_dat[is.na(cor_dat)] <- "?"
cor_dat <- cor_dat[,!apply(cor_dat, 2, function(x) all(x == "?"))]
apply(cor_dat[,-1], 2, table)
base_mat <- getStateMat4Dat(cor_dat[,c(1,2)])$rate.mat
model_set <- list(ard = base_mat,
cov = getFullMat(list(dropStateMatPars(base_mat, c(1,2)), base_mat),
getRateCatMat(2)),
hrm = getFullMat(list(base_mat, base_mat),
getRateCatMat(2)))
# saveRDS(res_list, file = "indep_models.RDS")
res_list <- readRDS(res_list, file = "indep_models.RDS")
model_table_list <- lapply(res_list, corHMM:::getModelTable)
# saveRDS(res_list, file = "indep_models.RDS")
res_list <- readRDS(file = "indep_models.RDS")
model_table_list <- lapply(res_list, corHMM:::getModelTable)
names(model_table_list) <- colnames(cor_dat[,-1])
model_table_list
find_rate_shift_nodes <- function(corhmm_obj){
phy <- corhmm_obj$phy
ntips <- length(phy$tip.label)
edge_scores <- c()
for(i in 1:nrow(phy$edge)){
if(phy$edge[i,2] > ntips){
focal_nodes <- phy$edge[i,]
anc_index <- focal_nodes[1] - ntips
dec_index <- focal_nodes[2] - ntips
anc_recon <- corhmm_obj$states[anc_index,]
dec_recon <- corhmm_obj$states[dec_index,]
anc_r1r2 <- c(sum(anc_recon[1:2]), sum(anc_recon[3:4]))
dec_r1r2 <- c(sum(dec_recon[1:2]), sum(dec_recon[3:4]))
edge_scores[i] <- sum(abs(anc_r1r2 - dec_r1r2))
}else{
edge_scores[i] <- 0
}
}
return(edge_scores)
}
i = 1
node_labels <- list()
for(i in 1:length(res_list)){
focal_res <- res_list[[i]][[which.max(model_table_list[[i]]$AICwt)]]
if(dim(focal_res$solution)[1] == 2){
node_labels[[i]] <- NA
}else{
cool_edges <- find_rate_shift_nodes(focal_res)
phy <- focal_res$phy
cool_edges <- cool_edges/max(cool_edges)
cool_edge_index <- focal_res$phy$edge[which(cool_edges>0.5),] - length(focal_res$phy$tip.label)
colnames(cool_edge_index) <- c("anc", "dec")
out <- cbind(cool_edge_index, score=cool_edges[which(cool_edges>0.5)])
node_labels[[i]] <- out
}
}
names(node_labels) <- colnames(cor_dat)[-1]
tree$node.label <- rep("", length(tree$node.label))
for(i in 1:length(node_labels)){
if(is.na(node_labels[[i]])){
next
}else{
for(j in 1:nrow(node_labels[[i]])){
antibiotic_name <- names(node_labels)[i]
tree$node.label[node_labels[[i]][j,1]] <-
paste0(tree$node.label[node_labels[[i]][j,1]], ";",
gsub("dich", "anc", antibiotic_name))
tree$node.label[node_labels[[i]][j,2]] <-
paste0(tree$node.label[node_labels[[i]][j,1]], ";",
gsub("dich", "dec", antibiotic_name))
}
}
}
setwd("~/corhmm-dredge/")
library(corHMM)
source("code/utils.R")
# sim 1
trees <- lapply(dir("trees/", full.names = TRUE), read.tree)
simulation <- "01"
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=1)
# load
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
sim_res_files <- dir("res/", full.names = TRUE)[grep(paste0("res", simulation, "_"), dir("res/"))]
tmp <- get_par_table(index_mat, 100, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, "[[", "cor_dat")
res_list <- lapply(sim_res_files, readRDS)
names(res_list) <- gsub(".*_", "", sim_res_files) %>% gsub(".RDS", "", .)
# format data and compare results
df_list <- lapply(res_list, function(x) do.call(rbind, lapply(x, get_solution_from_res)))
df_true <- do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
ntips <- do.call(rbind, lapply(full_dat, function(x) length(x$phy$tip.label)))
names(res_list) <- gsub(".*_", "", sim_res_files) %>% gsub(".RDS", "", .)
names(res_list) <- gsub(".*_", "", sim_res_files)
names(res_list)
setwd("~/corhmm-dredge/")
library(corHMM)
source("code/utils.R")
# sim 1
trees <- lapply(dir("trees/", full.names = TRUE), read.tree)
simulation <- "01"
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=1)
# load
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
sim_res_files <- dir("res/", full.names = TRUE)[grep(paste0("res", simulation, "_"), dir("res/"))]
tmp <- get_par_table(index_mat, 100, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, "[[", "cor_dat")
res_list <- lapply(sim_res_files, readRDS)
names(res_list) <- gsub(".*_", "", sim_res_files)
names(res_list)
res_list
sim_res_files
# load
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
sim_res_files <- dir("results/", full.names = TRUE)[grep(paste0("res", simulation, "_"), dir("res/"))]
sim_res_files
sim_res_files <- dir("results/", full.names = TRUE)[grep(paste0("res", simulation, "_"),
dir("results/"))]
sim_res_files
tmp <- get_par_table(index_mat, 100, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
par_table
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, "[[", "cor_dat")
res_list <- lapply(sim_res_files, readRDS)
names(res_list) <- gsub(".*_", "", sim_res_files)
gsub(".RDS", "", .)
res_list
names(res_list)
gsub(".RDS", "", names(res_list))
names(res_list) <- gsub(".RDS", "", names(res_list))
# format data and compare results
df_list <- lapply(res_list, function(x) do.call(rbind, lapply(x, get_solution_from_res)))
df_true <- do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
ntips <- do.call(rbind, lapply(full_dat, function(x) length(x$phy$tip.label)))
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
get_better_df
library(dplyr)
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
library(tidyr)
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
df_true_long
df_long_list <- list()
for(i in 1:length(df_list)){
df_long_list[[i]] <- get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
df_long_list[[i]]$true <- df_true_long$value
df_long_list[[i]]$diff <- df_long_list[[i]]$value - df_true_long$value
}
df_all <- do.call(rbind, df_long_list)
convert_par_format <- function(par_value) {
gsub("\\((\\d)\\)_\\((\\d)\\)", "q[\\1][\\2]", par_value)
}
# df_all$par <- sapply(df_all$par, convert_par_format)
df_all_1 <- cbind(sim = "sim-01", df_all)
df_all_1
# sim 2
trees <- lapply(dir("trees/", full.names = TRUE), read.tree)
simulation <- "02"
index_mat <- get_index_mat(nChar=2, nStates=2, nRateClass=1)
# load
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
sim_res_files <- dir("results/", full.names = TRUE)[grep(paste0("res", simulation, "_"),
dir("results/"))]
tmp <- get_par_table(index_mat, 100, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, "[[", "cor_dat")
res_list <- lapply(sim_res_files, readRDS)
names(res_list) <- gsub(".*_", "", sim_res_files) %>% gsub(".RDS", "", .)
# format data and compare results
df_list <- lapply(res_list, function(x) do.call(rbind, lapply(x, get_solution_from_res)))
df_true <- do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
ntips <- do.call(rbind, lapply(full_dat, function(x) length(x$phy$tip.label)))
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
df_long_list <- list()
for(i in 1:length(df_list)){
df_long_list[[i]] <- get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
df_long_list[[i]]$true <- df_true_long$value
df_long_list[[i]]$diff <- df_long_list[[i]]$value - df_true_long$value
}
df_all <- do.call(rbind, df_long_list)
# convert_par_format <- function(par_value) {
#   gsub("\\((\\d)\\)_\\((\\d)\\)", "q[\\1][\\2]", par_value)
# }
# df_all$par <- sapply(df_all$par, convert_par_format)
df_all_2 <- cbind(sim = "sim-02", df_all)
df_all_2
table(df_all_2$type)
# sim 3
trees <- lapply(dir("trees/", full.names = TRUE), read.tree)
simulation <- "03"
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=2)
# load
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
sim_res_files <- dir("results/", full.names = TRUE)[grep(paste0("res", simulation, "_"),
dir("results/"))]
tmp <- get_par_table(index_mat, 100, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, "[[", "cor_dat")
res_list <- lapply(sim_res_files, readRDS)
names(res_list) <- gsub(".*_", "", sim_res_files) %>% gsub(".RDS", "", .)
# format data and compare results
df_list <- lapply(res_list, function(x) do.call(rbind, lapply(x, get_solution_from_res)))
df_true <- do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
ntips <- do.call(rbind, lapply(full_dat, function(x) length(x$phy$tip.label)))
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
ntips
df_true
index_mat
df_list
index_mat
par_table_name
par_table
rate_mats
index_mat
get_par_from_rate_mat
full_dat
do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
tmp
par_table
dim(df_true)
dim(par_table)
full_dat[[1]]
full_dat[[1]]$par
get_par_from_rate_mat
index_mat
index_mat$rate_mat
get_par_from_rate_mat <- function(dat, index_mat){
p <- sapply(1:max(index_mat$full_rate_mat, na.rm = TRUE), function(x)
na.omit(c(dat$par))[na.omit(c(index_mat$full_rate_mat) == x)][1])
return(p)
}
df_true <- do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
df_true
df_true <- do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
ntips <- do.call(rbind, lapply(full_dat, function(x) length(x$phy$tip.label)))
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
df_long_list <- list()
for(i in 1:length(df_list)){
df_long_list[[i]] <- get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
df_long_list[[i]]$true <- df_true_long$value
df_long_list[[i]]$diff <- df_long_list[[i]]$value - df_true_long$value
}
df_long_list
df_list
length(df_list)
colnames(tmp)
names(res_list)[i]
ntips
df_long_list[[i]] <- get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
get_better_df
df_list[[i]]
dim(df_list[[i]])
colnames(tmp)
get_better_df
get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
debug(get_better_df)
get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
col_nm
df
df %>%
pivot_longer(cols = col_nm, names_to = "par", values_to = "value")
# sim 1
trees <- lapply(dir("trees/", full.names = TRUE), read.tree)
simulation <- "01"
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=1)
# load
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
sim_res_files <- dir("results/", full.names = TRUE)[grep(paste0("res", simulation, "_"),
dir("results/"))]
tmp <- get_par_table(index_mat, 100, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, "[[", "cor_dat")
res_list <- lapply(sim_res_files, readRDS)
names(res_list) <- gsub(".*_", "", sim_res_files)
names(res_list) <- gsub(".RDS", "", names(res_list))
# format data and compare results
df_list <- lapply(res_list, function(x) do.call(rbind, lapply(x, get_solution_from_res)))
df_true <- do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
ntips <- do.call(rbind, lapply(full_dat, function(x) length(x$phy$tip.label)))
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
df_long_list <- list()
df
df_longer
for(i in 1:length(df_list)){
df_long_list[[i]] <- get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
df_long_list[[i]]$true <- df_true_long$value
df_long_list[[i]]$diff <- df_long_list[[i]]$value - df_true_long$value
}
df_all <- do.call(rbind, df_long_list)
convert_par_format <- function(par_value) {
gsub("\\((\\d)\\)_\\((\\d)\\)", "q[\\1][\\2]", par_value)
}
# df_all$par <- sapply(df_all$par, convert_par_format)
df_all_1 <- cbind(sim = "sim-01", df_all)
trees <- lapply(dir("trees/", full.names = TRUE), read.tree)
simulation <- "02"
index_mat <- get_index_mat(nChar=2, nStates=2, nRateClass=1)
# load
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
sim_res_files <- dir("results/", full.names = TRUE)[grep(paste0("res", simulation, "_"),
dir("results/"))]
tmp <- get_par_table(index_mat, 100, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, "[[", "cor_dat")
res_list <- lapply(sim_res_files, readRDS)
names(res_list) <- gsub(".*_", "", sim_res_files) %>% gsub(".RDS", "", .)
# format data and compare results
df_list <- lapply(res_list, function(x) do.call(rbind, lapply(x, get_solution_from_res)))
df_true <- do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
ntips <- do.call(rbind, lapply(full_dat, function(x) length(x$phy$tip.label)))
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
df_long_list <- list()
for(i in 1:length(df_list)){
df_long_list[[i]] <- get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
df_long_list[[i]]$true <- df_true_long$value
df_long_list[[i]]$diff <- df_long_list[[i]]$value - df_true_long$value
}
df_all <- do.call(rbind, df_long_list)
# convert_par_format <- function(par_value) {
#   gsub("\\((\\d)\\)_\\((\\d)\\)", "q[\\1][\\2]", par_value)
# }
# df_all$par <- sapply(df_all$par, convert_par_format)
df_all_2 <- cbind(sim = "sim-02", df_all)
df
undebug(get_better_df)
# sim 2
trees <- lapply(dir("trees/", full.names = TRUE), read.tree)
simulation <- "02"
index_mat <- get_index_mat(nChar=2, nStates=2, nRateClass=1)
# load
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
sim_res_files <- dir("results/", full.names = TRUE)[grep(paste0("res", simulation, "_"),
dir("results/"))]
tmp <- get_par_table(index_mat, 100, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, "[[", "cor_dat")
res_list <- lapply(sim_res_files, readRDS)
names(res_list) <- gsub(".*_", "", sim_res_files) %>% gsub(".RDS", "", .)
# format data and compare results
df_list <- lapply(res_list, function(x) do.call(rbind, lapply(x, get_solution_from_res)))
df_true <- do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
ntips <- do.call(rbind, lapply(full_dat, function(x) length(x$phy$tip.label)))
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
df_long_list <- list()
for(i in 1:length(df_list)){
df_long_list[[i]] <- get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
df_long_list[[i]]$true <- df_true_long$value
df_long_list[[i]]$diff <- df_long_list[[i]]$value - df_true_long$value
}
df_all <- do.call(rbind, df_long_list)
df_all
index_mat
df_all <- do.call(rbind, df_long_list)
# convert_par_format <- function(par_value) {
#   gsub("\\((\\d)\\)_\\((\\d)\\)", "q[\\1][\\2]", par_value)
# }
# df_all$par <- sapply(df_all$par, convert_par_format)
df_all_2 <- cbind(sim = "sim-02", df_all)
df_all_2
# sim 3
trees <- lapply(dir("trees/", full.names = TRUE), read.tree)
simulation <- "03"
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=2)
# load
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
sim_res_files <- dir("results/", full.names = TRUE)[grep(paste0("res", simulation, "_"),
dir("results/"))]
tmp <- get_par_table(index_mat, 100, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, "[[", "cor_dat")
res_list <- lapply(sim_res_files, readRDS)
names(res_list) <- gsub(".*_", "", sim_res_files) %>% gsub(".RDS", "", .)
# format data and compare results
df_list <- lapply(res_list, function(x) do.call(rbind, lapply(x, get_solution_from_res)))
df_true <- do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
ntips <- do.call(rbind, lapply(full_dat, function(x) length(x$phy$tip.label)))
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
df_long_list <- list()
df_list[[i]]
df_long_list[[i]] <- get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
for(i in 1:length(df_list)){
df_long_list[[i]] <- get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
df_long_list[[i]]$true <- df_true_long$value
df_long_list[[i]]$diff <- df_long_list[[i]]$value - df_true_long$value
}
i
get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
df_true_long
get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
get_better_df
tmp_data <- df_list[[i]]
colnames(tmp_data) <- colnames(tmp)
tmp_data
colnames(tmp)
tmp_data
colnames(tmp_data)
colnames(tmp_data) <- colnames(tmp)
get_better_df
dim(tmp_data)
length(colnames(tmp))
tmp
df_list[[i]]
df_list
dim(df_list[[1]])
index_mat
get_solution_from_res
index_mat
get_index_mat
index_mat
