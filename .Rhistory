# simple two character simulation
setwd("~/corhmm-dredge/")
library(corHMM)
library(parallel)
library(MASS)
library(MCMCpack)
source("code/utils.R")
nSim <- 100
library(corHMM)
library(parallel)
source("code/utils.R")
source("code/utils.R")
source("code/utils.R")
nSim <- 100
if (detectCores()>100){
mccores <- 100
}else{
mccores <- 4
}
trees <- lapply(dir("trees/", full.names = TRUE), read.tree)
phy <- trees[[1]]
# which simulation number
simulation <- "02"
overwrite <- FALSE
# the various file names
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
# creates an index mat appropriate for nchar, nstates, and nhidden
index_mat <- get_index_mat(nChar=2, nStates=2, nRateClass=1)
index_mat
setwd("~/corhmm-dredge/")
library(corHMM)
library(parallel)
library(MASS)
library(dplyr)
library(ggplot2)
library(tidyr)
library(gghalves)
source("code/utils.R")
trees <- lapply(dir("trees/", full.names = TRUE), read.tree)
phy <- trees[[1]]
nSim = 100
############### Simulation scenario 2 ####################
# which simulation number
simulation <- "02"
# the various file names
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
res_reg_name <- paste0("res_reg-", simulation, ".RDS")
res_unreg_name <- paste0("res_unreg-", simulation, ".RDS")
# load everything
index_mat <- get_index_mat(nChar=2, nStates=2, nRateClass=1)
tmp <- get_par_table(index_mat, nSim, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, function(x) get_formatted_data(x, index_mat))
res_unreg <- readRDS(paste0("res/", res_unreg_name))
res_reg <- readRDS(paste0("res/", res_reg_name))
res_reg
res_unreg
# load everything
index_mat <- get_index_mat(nChar=2, nStates=2, nRateClass=1)
tmp <- get_par_table(index_mat, nSim, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, function(x) get_formatted_data(x, index_mat))
res_unreg <- readRDS(paste0("res/", res_unreg_name))
cor_dat <- lapply(full_dat, function(x) get_formatted_data(x, index_mat))
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, function(x) get_formatted_data(x, index_mat))
index_mat
############### Simulation scenario 1 ####################
# which simulation number
simulation <- "01"
# the various file names
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
sim_res_files <- dir("res/", full.names = TRUE)[grep(paste0("res", simulation, "_"), dir("res/"))]
# load everything
if(simulation == "01"){
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=1)
}
if(simulation == "02"){
index_mat <- get_index_mat(nChar=2, nStates=2, nRateClass=1)
}
tmp <- get_par_table(index_mat, nSim, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, "[[", "cor_dat")
# load results
res_list <- lapply(sim_res_files, readRDS)
names(res_list) <- gsub(".*_", "", sim_res_files) %>% gsub(".RDS", "", .)
# format data and compare results
df_list <- lapply(res_list, function(x) do.call(rbind, lapply(x, get_solution_from_res)))
df_true <- do.call(rbind, lapply(full_dat, function(x) get_par_from_rate_mat(x, index_mat)))
ntips <- do.call(rbind, lapply(full_dat, function(x) length(x$phy$tip.label)))
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
df_long_list <- list()
for(i in 1:length(df_list)){
df_long_list[[i]] <- get_better_df(df_list[[i]], colnames(tmp), names(res_list)[i], ntips)
df_long_list[[i]]$diff <- df_long_list[[i]]$value - df_true_long$value
}
df_all <- do.call(rbind, df_long_list)
convert_par_format <- function(par_value) {
gsub("\\((\\d)\\)_\\((\\d)\\)", "q[\\1][\\2]", par_value)
}
df_all$par <- sapply(df_all$par, convert_par_format)
# Calculate MSE and RMSE for df_reg_diff
df_summary <- df_all %>%
group_by(ntips, type, par) %>%
summarize(
bias = mean(diff),
var = var(diff),
mse= mean(diff^2),  # Calculate MSE
rmse = sqrt(mse)     # Calculate RMSE
)
print(df_summary)
ggplot(df_all, aes(x = factor(type), y = diff, color = type)) +
geom_half_boxplot(center=TRUE, errorbar.draw=FALSE, width=0.75, nudge=n, outlier.colour = NA) +
geom_half_point(alpha = 0.25, position=position_dodge(width=0.75)) +
geom_half_violin(side="r", nudge=n, trim=FALSE, width=0.75, position=position_dodge(width=0.75)) +
coord_cartesian(ylim=c(-5,5)) +
facet_grid(par~ntips, labeller = labeller(
par = label_parsed,   # Use label_parsed for mathematical expressions
ntips = label_parsed  # Use label_parsed for mathematical expressions
)) +
theme_minimal() +
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, hjust = 1),
strip.background = element_blank(),
strip.text.x = element_text(face = "bold", size = 12),
strip.text.y = element_text(face = "bold", size = 12, angle = 0)
) +
labs(x = "Type", y = "Difference", color = "Type",
caption = "Source: Data Source Here") +
scale_color_brewer(palette = "Set1") # Use a color-blind friendly palette
knitr::opts_chunk$set(echo = TRUE)
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1)
library(corHMM)
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l2")
corhmm_fit
corhmm_fit$solution
corhmm_fit_l1$solution
corhmm_fit_l1$loglik
corhmm_fit_l1$solution
library(corHMM)
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_l2 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l2")
corhmm_fit_l1$solution
corhmm_fit_l2$solution
library(corHMM)
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit
corhmm_fit_dredge
corhmm_fit
corhmm_fit_dredge
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l2")
corhmm_fit_dredge
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
library(corHMM)
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_l2 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l2")
corhmm_fit$solution
corhmm_fit_l1$solution
corhmm_fit_l1$solution
corhmm_fit_l2$solution
corhmm_fit_l1$solution
library(corHMM)
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_l2 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l2")
corhmm_fit
corhmm_fit_l1
corhmm_fit_l2
corhmm_fit_l1
library(corHMM)
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dredge
corhmm_fit
corhmm_fit_dredge
library(corHMM)
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dredge
corhmm_fit
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dredge
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dredge
library(corHMM)
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_l1
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_l1
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dredge
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_l1
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_l1
corhmm_fit_dr <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dr
corhmm_fit_dre <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dre
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dredge
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dredge
corhmm_fit_dredge
corhmm_profile <- get_batch_profile_lik(corhmm_obj = corhmm_fit,
range_factor = 10000,
n_points = 20,
ncores = 10,
dredge = FALSE)
corhmm_profile <- corHMM:::get_batch_profile_lik(corhmm_obj = corhmm_fit,
range_factor = 10000,
n_points = 20,
ncores = 10,
dredge = FALSE)
corHMM:::plot_batch_profile_lik(corhmm_profile, ylim = c(-55, -40))
corHMM:::plot_batch_profile_lik(corhmm_profile)
dredge_profile
corhmm_fit_dredge
dredge_profile <- corHMM:::get_batch_profile_lik(corhmm_obj = corhmm_fit_dredge,
range_factor = 10000,
n_points = 20,
ncores = 10,
dredge = TRUE)
corHMM:::plot_batch_profile_lik(corhmm_profile, ylim = c(-55, -40))
plot_batch_profile_lik(dredge_profile, ylim = c(-55, -40))
corHMM:::plot_batch_profile_lik(dredge_profile, ylim = c(-55, -40))
dredge_profile
corhmm_fit_dredge
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dredge
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dredge
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l2")
corhmm_fit_dredge
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l2")
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l2")
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l2")
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l2")
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l2")
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dredge
corhmm_fit_dredge <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1")
corhmm_fit_dredge
dredge_profile <- corHMM:::get_batch_profile_lik(corhmm_obj = corhmm_fit_dredge,
range_factor = 10000,
n_points = 20,
ncores = 10,
dredge = TRUE)
corHMM:::plot_batch_profile_lik(dredge_profile, ylim = c(-55, -40))
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = .5)
corhmm_fit_l1
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = .5)
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = .5)
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = .5)
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = .5)
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = .25)
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = .25)
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = 0)
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = 0)
corhmm_fit
debug(corHMM:::dev.corhmm.dredge)
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = 0)
lambda
loglik
pen_score
lambda
(pen_score * lambda)
loglik
loglik + (pen_score * lambda)
udebug(corHMM:::dev.corhmm.dredge)
undebug(corHMM:::dev.corhmm.dredge)
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = 0)
corhmm_fit_l2 <- corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_l2
corhmm_fit_l2 <- corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_l2
corHMM(phy = phy, data = data, rate.cat = 1)
corHMM(phy = phy, data = data, rate.cat = 1)
corhmm_fit_l1
corHMM:::MatrixToPars(corhmm_fit_l1)
p <- corHMM:::MatrixToPars(corhmm_fit_l1)
corHMM(phy = phy, data = data, rate.cat = 1, p = p)
corHMM:::corHMMDredge(phy = phy, data = data, 1, pen_type = "l1", lambda = 0)
