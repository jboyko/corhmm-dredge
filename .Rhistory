colnames(tmp)
tmp
colnames(plot_data) <- paste0(colnames(tmp), rep(c("ntip", "-true", "-unreg", "-reg"), each = 2))
paste0(colnames(tmp), rep(c("ntip", "-true", "-unreg", "-reg"), each = 2))
colnames(plot_data) <- c("ntip", paste0(colnames(tmp), rep(c("-true", "-unreg", "-reg"), each = 2)))
colnames(plot_data)
plot_data_long <- pivot_longer(as.data.frame(plot_data), cols = everything())
plot_data_long
plot_data_long <- pivot_longer(as.data.frame(plot_data), cols = "ntip")
plot_data_long
df_true
colnames(tmp)
col_nm = colnames(tmp)
df = df_true
df
df
colnames(df_true) <- colnames(tmp)
df_true
cbind("true", df_true)
data.frame("true", df_true)
data.frame(type = "true", df_true)
df_true
df_true
df_true
data.frame(type = "true", colnames(tmp)[1] = df_true)
data.frame(type = "true", colnames(tmp)[1] = df_true[,1])
colnames(tmp)[1]
df_true[,1]
data.frame(type = "true", colnames(tmp)[1] = df_true[,1])
xx <- data.frame(type = "true", df_true)
head(xx)
xx <- cbind(type = "true", df_true)
head(xx)
xx <- cbind(type = "true", data.frame(df_true))
head(xx)
df_true
df_true <- as.data.frame(df_true)
df_true
colnames(df_true) <- colnames(tmp)
xx <- cbind(type = "true", df_true)
head(xx)
xx <- data.frame(type = "true", df_true)
head(xx)
xx <- cbind(type = "true", df_true)
xx
make_nice_df <- function(df, type, col_nm){
df <- as.data.frame(df)
colnames(df) <- colnames(tmp)
xx <- cbind(type = type, df)
return(xx)
}
xx
make_nice_df <- function(df, type, col_nm, ntip){
df <- as.data.frame(df)
colnames(df) <- colnames(tmp)
xx <- cbind(ntip=ntip, type = type, df)
return(xx)
}
make_nice_df(df_true, "true", colnames(tmp), n_tip)
plot_true <- make_nice_df(df_true, "true", colnames(tmp), n_tip)
plot_true <- make_nice_df(df_true, "true", colnames(tmp), n_tip)
plot_unreg <- make_nice_df(df_unreg, "unreg", colnames(tmp), n_tip)
plot_reg <- make_nice_df(df_reg, "reg", colnames(tmp), n_tip)
plot_reg
plot_unreg
plot_true
plot_reg
plot_unreg
plot_true <- make_nice_df(df_true, "true", colnames(tmp), n_tip)
plot_true
plot_unreg
plot_reg
plot_true
plot_unreg
plot_reg
make_nice_df <- function(df, type, col_nm, ntip){
df <- as.data.frame(df)
colnames(df) <- colnames(tmp)
xx <- cbind(ntip=ntip, type = type, df)
xx <- pivot_longer(as.data.frame(plot_data), cols = c("ntip", "type"))
return(xx)
}
plot_true <- make_nice_df(df_true, "true", colnames(tmp), n_tip)
xx
make_nice_df <- function(df, type, col_nm, ntip){
df <- as.data.frame(df)
colnames(df) <- colnames(tmp)
xx <- cbind(ntip=ntip, type = type, df)
xx <- pivot_longer(as.data.frame(plot_data), cols = everything())
return(xx)
}
plot_true <- make_nice_df(df_true, "true", colnames(tmp), n_tip)
plot_true
plot_true <- make_nice_df(df_true, "true", colnames(tmp), n_tip)
plot_true
make_nice_df <- function(df, type, col_nm, ntip){
df <- as.data.frame(df)
colnames(df) <- colnames(tmp)
xx <- cbind(ntip=ntip, type = type, df)
# xx <- pivot_longer(as.data.frame(plot_data), cols = everything())
return(xx)
}
plot_true <- make_nice_df(df_true, "true", colnames(tmp), n_tip)
plot_true
pivot_longer(plot_true, cols = "ntip")
pivot_longer(plot_true, cols = c("type"))
pivot_longer(plot_true, cols = col_nm)
col_nm
pivot_longer(plot_true, cols = col_nm[1])
plot_true
###### ###### ###### ###### model fitting ###### ###### ###### ######
file_name <- "res01_reg-l1.RDS"
file_found <- res_unreg_name %in% dir("res/")
file_found
###### ###### ###### ###### model fitting ###### ###### ###### ######
file_name <- "res01_unreg.RDS"
###### ###### ###### ###### model fitting ###### ###### ###### ######
file_name <- "res01_unreg.RDS"
file_found <- file_name %in% dir("res/")
file_found
file_name <- "res01_reg-l1.RDS"
file_found <- file_name %in% dir("res/")
file_found
file_found
file_name <- "res01_reg-l2.RDS"
file_found <- file_name %in% dir("res/")
file_found
file_name <- "res01_reg-logexp.RDS"
file_found <- file_name %in% dir("res/")
file_found
file_name <- "res01_reg-logl1.RDS"
file_found <- file_name %in% dir("res/")
file_found
df_true
ntips <- do.call(rbind, lapply(full_dat, function(x) length(x$phy$tip.label)))
ntips
df
df <- as.data.frame(df)
colnames(df) <- col_nm
df
head(df)
type
type = "true"
cbind(ntips = ntips, type = type, df)
xx <- cbind(ntips = ntips, type = type, df)
head(xx)
df_longer <- xx %>%
pivot_longer(cols = c("(2)_(1)", "(1)_(2)"), names_to = "par", values_to = "value")
df_longer
col_nm
df_longer <- xx %>%
pivot_longer(cols = col_nm, names_to = "par", values_to = "value")
df_longer
get_better_df <- function(df, col_nm, type, ntips){
df <- as.data.frame(df)
colnames(df) <- col_nm
df <- cbind(ntips = ntips, type = type, df)
df_longer <- df %>%
pivot_longer(cols = col_nm, names_to = "par", values_to = "value")
return(df_longer)
}
colnames(tmp)
get_better_df(df_true, colnames(tmp), "true", ntips)
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
df_true_long <- get_better_df(df_true, colnames(tmp), "true", ntips)
df_reg_long <- get_better_df(df_reg, colnames(tmp), "reg", ntips)
df_unreg_long <- get_better_df(df_unreg, colnames(tmp), "unreg", ntips)
df_unreg_long
df_reg_long
df_true_long
df_reg_long
df_unreg_long
df_true_long
df_unreg_long
df_reg_long
df_unreg_long
summary_reg <- df_reg_long %>%
group_by(par) %>%
summarize(mean_reg = mean(value), sd_reg = sd(value))
summary_unreg <- df_unreg_long %>%
group_by(par) %>%
summarize(mean_unreg = mean(value), sd_unreg = sd(value))
comparison <- left_join(summary_reg, summary_unreg, by = "par")
comparison <- mutate(comparison, diff_mean = mean_reg - mean_unreg, diff_sd = sd_reg - sd_unreg)
comparison
df_reg_long %>%
group_by(par)
summary_reg <- df_reg_long %>%
group_by(par) %>%
group_by(ntips) %>%
summarize(mean_reg = mean(value), sd_reg = sd(value))
summary_reg
summary_reg <- df_reg_long %>%
group_by(ntips) %>%
summarize(mean_reg = mean(value), sd_reg = sd(value))
summary_reg
?group_by
summary_reg <- df_reg_long %>%
group_by(c(par, ntips)) %>%
summarize(mean_reg = mean(value), sd_reg = sd(value))
summary_reg <- df_reg_long %>%
group_by(c("par", "ntips")) %>%
summarize(mean_reg = mean(value), sd_reg = sd(value))
summary_reg <- df_reg_long %>%
group_by(par) %>%
summarize(mean_reg = mean(value), sd_reg = sd(value))
summary_unreg <- df_unreg_long %>%
group_by(par) %>%
summarize(mean_unreg = mean(value), sd_unreg = sd(value))
summary_unreg
summary_reg
library(ggplot2)
ggplot(df_reg_long, aes(x = value, fill = par)) +
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5) +
facet_wrap(~par) +
labs(title = "Comparison of df_reg_long and df_unreg_long")
ggplot(df_unreg_long, aes(x = value, fill = par)) +
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5) +
facet_wrap(~par) +
labs(title = "Comparison of df_unreg_long and df_reg_long")
# Perform t-test for each level of par
t_test_results <- df_reg_long %>%
group_by(par) %>%
summarize(p_value = t.test(value, df_unreg_long$value)$p.value)
t_test_results
summary_reg <- df_reg_long %>%
group_by(par, ntips) %>%
summarize(mean_reg = mean(value), sd_reg = sd(value))
summary_unreg <- df_unreg_long %>%
group_by(par, ntips) %>%
summarize(mean_unreg = mean(value), sd_unreg = sd(value))
summary_unreg
summary_reg
summary_unreg
comparison <- left_join(summary_reg, summary_unreg, by = "par")
summary_unreg
summary_reg
comparison <- left_join(summary_reg, summary_unreg)
comparison
df_true_long
comparison <- left_join(df_true_long, df_unreg_long)
comparison
df_true_long
df_true_long
df_unreg_long
comparison
summary_reg <- df_reg_long %>%
group_by(par, ntips) %>%
summarize(mean_reg = mean(value), sd_reg = sd(value))
summary_unreg <- df_unreg_long %>%
group_by(par, ntips) %>%
summarize(mean_unreg = mean(value), sd_unreg = sd(value))
comparison <- left_join(summary_reg, summary_unreg, by = "par")
comparison <- mutate(comparison, diff_mean = mean_reg - mean_unreg, diff_sd = sd_reg - sd_unreg)
comparison <- left_join(summary_reg, summary_unreg, by = c("par", "ntips"))
comparison <- left_join(summary_reg, summary_unreg, by = c("par", "ntips"))
comparison <- mutate(comparison, diff_mean = mean_reg - mean_unreg, diff_sd = sd_reg - sd_unreg)
comparison
df_unreg
df_reg_diff
df_reg_diff <- df_reg_long %>%
left_join(df_true_long, by = c("ntips", "par")) %>%
mutate(diff_reg = value.x - value.y)
df_reg_long %>%
left_join(df_true_long, by = c("ntips", "par"))
df_reg_diff <- df_reg_long %>%
left_join(df_true_long, by = c("ntips", "par")) %>%
mutate(diff_reg = value.x - value.y)
df_reg_diff
df_reg_long
df_reg_long %>%
left_join(df_true_long)
df_reg_long %>%
left_join(df_true_long)
df_reg_diff <- df_true_long %>%
bind_cols(df_reg_long)
df_reg_diff
df_reg_diff <- df_true_long %>%
bind_cols(df_reg_long) %>%
select(-ntips, -type)
df_reg_diff <- df_true_long %>%
bind_cols(df_reg_long)
df_true_long
df_unreg_long$diff <- df_unreg_long$value - df_true_long$value
df_unreg_long
df_unreg_long$diff <- df_unreg_long$value - df_true_long$value
df_reg_long$diff <- df_reg_long$value - df_true_long$value
df_reg_long
df_unreg_long
summary_reg <- df_reg_long %>%
group_by(par, ntips) %>%
summarize(mean_reg = mean(diff), var_reg = var(diff))
summary_unreg <- df_unreg_long %>%
group_by(par, ntips) %>%
summarize(mean_unreg = mean(diff), sd_unreg = var(diff))
summary_unreg
summary_reg
summary_unreg
summary_reg <- df_reg_long %>%
group_by(par, ntips) %>%
summarize(mean_reg = mean(diff), var_reg = var(diff))
summary_unreg <- df_unreg_long %>%
group_by(par, ntips) %>%
summarize(mean_unreg = mean(diff), var_unreg = var(diff))
summary_unreg
summary_reg
summary_unreg
summary_reg
comparison <- left_join(summary_reg, summary_unreg, by = c("par", "ntips"))
comparison
# Calculate MSE and RMSE for df_reg_diff
df_reg_summary <- df_reg_diff %>%
group_by(par, ntips) %>%
summarize(
mean_diff_reg = mean(diff_reg),
sd_diff_reg = sd(diff_reg),
mse_reg = mean(diff_reg^2),  # Calculate MSE
rmse_reg = sqrt(mse_reg)     # Calculate RMSE
)
# Calculate MSE and RMSE for df_reg_diff
df_reg_summary <- df_reg_long %>%
group_by(par, ntips) %>%
summarize(
mean_diff_reg = mean(diff_reg),
sd_diff_reg = sd(diff_reg),
mse_reg = mean(diff_reg^2),  # Calculate MSE
rmse_reg = sqrt(mse_reg)     # Calculate RMSE
)
# Calculate MSE and RMSE for df_reg_diff
df_reg_summary <- df_reg_long %>%
group_by(par, ntips) %>%
summarize(
mean_diff_reg = mean(diff),
sd_diff_reg = sd(diff),
mse_reg = mean(diff^2),  # Calculate MSE
rmse_reg = sqrt(mse_reg)     # Calculate RMSE
)
# Calculate MSE and RMSE for df_unreg_diff
df_unreg_summary <- df_unreg_long %>%
group_by(par, ntips) %>%
summarize(
mean_diff_unreg = mean(diff),
sd_diff_unreg = sd(diff),
mse_unreg = mean(diff^2),  # Calculate MSE
rmse_unreg = sqrt(mse_unreg)     # Calculate RMSE
)
# Merge the summaries for df_reg and df_unreg
comparison_summary <- df_reg_summary %>%
left_join(df_unreg_summary, by = c("par", "ntips"))
print(comparison_summary)
ggplot(df_reg_long, aes(x = value, fill = par)) +
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5) +
facet_wrap(~par) +
labs(title = "Comparison of df_reg_long and df_unreg_long")
ggplot(df_unreg_long, aes(x = value, fill = par)) +
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5) +
facet_wrap(~par) +
labs(title = "Comparison of df_unreg_long and df_reg_long")
ggplot(df_unreg_long, aes(x = log(value), fill = par)) +
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5) +
facet_wrap(~par) +
labs(title = "Comparison of df_unreg_long and df_reg_long")
df_reg_summary
df_unreg_summary
comparison_summary
# Calculate MSE and RMSE for df_reg_diff
df_reg_summary <- df_reg_long %>%
group_by(par, ntips) %>%
summarize(
mean_diff_reg = mean(diff),
var_diff_reg = var(diff),
mse_reg = mean(diff^2),  # Calculate MSE
rmse_reg = sqrt(mse_reg)     # Calculate RMSE
)
# Calculate MSE and RMSE for df_unreg_diff
df_unreg_summary <- df_unreg_long %>%
group_by(par, ntips) %>%
summarize(
mean_diff_unreg = mean(diff),
var_diff_unreg = var(diff),
mse_unreg = mean(diff^2),  # Calculate MSE
rmse_unreg = sqrt(mse_unreg)     # Calculate RMSE
)
# Merge the summaries for df_reg and df_unreg
comparison_summary <- df_reg_summary %>%
left_join(df_unreg_summary, by = c("par", "ntips"))
print(comparison_summary)
ggplot(df_reg_long, aes(x = value, fill = par)) +
geom_histogram(binwidth = 0.1, position = "identity", alpha = 0.5) +
facet_wrap(~par) +
labs(title = "Comparison of df_reg_long and df_unreg_long")
res_reg_name
dir("res/")
paste0("res", simulation)
grep(paste0("res", simulation, "_"), dir("res/"))
grep(paste0("res", simulation, "_"), dir("res/", full.names = TRUE))
dir("res/", full.names = TRUE)[grep(paste0("res", simulation, "_"), dir("res/"))]
dir("res/", full.names = TRUE)[grep(paste0("res", simulation, "_"), dir("res"))]
sim_res_files <- dir("res/", full.names = TRUE)[grep(paste0("res", simulation, "_"), dir("res/"))]
sim_res_files
# load everything
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=1)
tmp <- get_par_table(index_mat, nSim, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
rate_mats <- get_rate_mats(index_mat, par_table)
full_dat <- readRDS(paste0("data/", full_dat_name))
cor_dat <- lapply(full_dat, "[[", "cor_dat")
res_unreg
sim_res_files
# load results
all_res <- lapply(sim_res_files, readRDS)
all_res
sim_res_files
gsub(".*_", "", sim_res_files)
gsub(".*_& .RDS", "", sim_res_files)
gsub(".*_", "", sim_res_files)
gsub(".*_", "", sim_res_files) %>% gsub(".RDS", "")
gsub(".*_", "", sim_res_files) %>% gsub(".RDS", "", .)
names(all_res) <- gsub(".*_", "", sim_res_files) %>% gsub(".RDS", "", .)
names(all_res)
res_list <- all_res
# format data and compare results
df_list <- lapply(res_list, function(x) do.call(rbind, lapply(x, get_solution_from_res)))
get_solution_from_res
res_list
# format data and compare results
df_unreg <- do.call(rbind, lapply(res_list[[1]], get_solution_from_res))
df_unreg
# format data and compare results
df_unreg <- do.call(rbind, lapply(res_list[[2]], get_solution_from_res))
res_list[[2]]
names(res_list)
res_list[[3]]
res_list[[4]]
res_list[[5]]
names(res_list)
res_list[[2]]
# simple binary simulation
setwd("~/corhmm-dredge/")
library(corHMM)
library(parallel)
library(MASS)
library(MCMCpack)
source("code/utils.R")
nSim <- 100
if (detectCores()>100){
mccores <- 100
}else{
mccores <- 4
}
trees <- lapply(dir("trees/", full.names = TRUE), read.tree)
# which simulation number
simulation <- "01"
overwrite <- FALSE
# the various file names
par_table_name <- paste0("par_table-", simulation, ".csv")
full_dat_name <- paste0("full_data-", simulation, ".RDS")
cor_dat_name <- paste0("cor_data-", simulation, ".RDS")
# creates an index mat appropriate for nchar, nstates, and nhidden
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=1)
###### ###### ###### ###### parameter table generation ###### ###### ###### ######
file_found <- par_table_name %in% dir("parameter_tables/")
if(!file_found | overwrite){
par_table <- get_par_table(index_mat, nSim, mean = 0, sd = 0.25)
write.csv(par_table, file = paste0("parameter_tables/", par_table_name), row.names = FALSE)
}else{
tmp <- get_par_table(index_mat, nSim, mean = 0, sd = 0.25)
par_table <- read.csv(paste0("parameter_tables/", par_table_name))
colnames(par_table) <- colnames(tmp)
}
# creates a list of rate matrices for simulation
rate_mats <- get_rate_mats(index_mat, par_table)
# let's create the full data strucutre now.
# a list with phy, sim pars, data
full_dat <- list()
count <- 1
for(i in trees){
for(j in i){
for(k in rate_mats){
tmp <- list(phy = j, par = k, dat = NULL)
full_dat[[count]] <- tmp
count <- count+1
}
}
}
###### ###### ###### ###### data simulation ###### ###### ###### ######
file_found <- full_dat_name %in% dir("data/")
if(!file_found | overwrite){
for(i in 1:length(full_dat)){
cat("\r", i, "out of", length(full_dat), "...    ")
full_dat[[i]]$dat <- get_sim_data(full_dat[[i]]$phy, full_dat[[i]]$par, index_mat)
full_dat[[i]]$cor_dat <- get_formatted_data(full_dat[[i]]$dat, index_mat)
}
saveRDS(full_dat, file = paste0("data/", full_dat_name))
}else{
full_dat <- readRDS(paste0("data/", full_dat_name))
}
file_name <- "res01_reg-l2.RDS"
file_found <- file_name %in% dir("res/")
file_found
file_found
mccores
debug(corHMM:::corHMMDredge)
res_reg <- mclapply(full_dat, function(x)
corHMM:::corHMMDredge(x$phy, x$cor_dat, 1, pen_type = "l2"),
mc.cores = mccores)
x = full_dat[[1]]
corHMM:::corHMMDredge(x$phy, x$cor_dat, 1, pen_type = "l2")
undebug(corHMM:::corHMMDredge)
debug(corHMM:::get_penalty_score)
corHMM:::corHMMDredge(x$phy, x$cor_dat, 1, pen_type = "l2")
