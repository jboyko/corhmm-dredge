dredge_fit_2
dredge_fit_3
opts <- list("algorithm"="DIRECT-L", "maxeval"="1000000", "ftol_rel"=.Machine$double.eps^0.5)
dredge_fit_1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps, opts=opts)
opts <- list("algorithm"="DIRECT", "maxeval"="1000000", "ftol_rel"=.Machine$double.eps^0.5)
dredge_fit_1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps, opts=opts)
opts <- list("algorithm"="NLOPT_GN_DIRECT_L", "maxeval"="1000000", "ftol_rel"=.Machine$double.eps^0.5)
dredge_fit_1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps, opts=opts)
dredge_fit_1
opts <- list("algorithm"="NLOPT_GN_DIRECT_L", "maxeval"="1000000", "ftol_rel"=.Machine$double.eps^0.5)
dredge_fit_1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps, opts=opts)
dredge_fit_1
par(mar=c(.1,.1,.1,.1))
plotRECON(dredge_fit_2$phy, dredge_fit_1$states, pie.cex = 1)
par(mar=c(.1,.1,.1,.1))
plotRECON(dredge_fit_2$phy, dredge_fit_1$states, pie.cex = 1)
dev.off()
par(mar=c(.1,.1,.1,.1))
plotRECON(dredge_fit_2$phy, dredge_fit_1$states, pie.cex = 1)
dredge_fit_1
opts <- list("algorithm"="NLOPT_GN_DIRECT", "maxeval"="1000000", "ftol_rel"=.Machine$double.eps^0.5)
dredge_fit_1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps, opts=opts)
dredge_fit_1
opts <- list("algorithm"="NLOPT_LN_SBPLX", "maxeval"="1000000", "ftol_rel"=.Machine$double.eps^0.5)
opts <- list("algorithm"="NLOPT_LN_SBPLX", "maxeval"="1000000", "ftol_rel"=.Machine$double.eps^0.5)
dredge_fit_1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps, opts=opts)
dredge_fit_1
opts <- list("algorithm"="NLOPT_GN_CRS2_LM", "maxeval"="1000000", "ftol_rel"=.Machine$double.eps^0.5)
dredge_fit_1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps, opts=opts)
dredge_fit_1
dredge_fit_2
opts
dredge_fit_2
dredge_fit_2 <- corHMM:::corHMMDredge(phy = phy, data = data, 2, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps, opts=opts)
dredge_fit_1
dredge_fit_2
par(mar=c(.1,.1,.1,.1))
plotRECON(dredge_fit_2$phy, dredge_fit_1$states, pie.cex = 1)
plotRECON(dredge_fit_2$phy, dredge_fit_2$states, pie.cex = 1)
dredge_fit_1$index.mat[dredge_fit_1$solution < 1e-10] <- NA
dredge_fit_1$index.mat[!is.na(dredge_fit_1$index.mat)] <-
1:length(dredge_fit_1$index.mat[!is.na(dredge_fit_1$index.mat)])
dredge_fit_1$solution[dredge_fit_1$solution < 1e-10] <- NA
dredge_fit_2$index.mat[dredge_fit_2$solution < 1e-10] <- NA
dredge_fit_2$index.mat[!is.na(dredge_fit_2$index.mat)] <-
1:length(dredge_fit_2$index.mat[!is.na(dredge_fit_2$index.mat)])
dredge_fit_2$solution[dredge_fit_2$solution < 1e-10] <- NA
dredge_fit_2
dredge_fit_1
library(corHMM)
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
library(dentist)
fn_corHMM <- function(par, phy, data, rate.cat){
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1, p = par)
loglik <- corhmm_fit$loglik
neg_loglik <- -loglik
return(neg_loglik)
}
fn_Dredge <- function(par, phy, data, rate.cat){
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1, p = par)
pen <- sum(log(par))
loglik <- corhmm_fit$loglik + pen
neg_loglik <- -loglik
return(neg_loglik)
}
phy$edge.length <- phy$edge.length + 2e-5
dredge_fit_1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps)
dredge_fit_1
dredge_fit_1$index.mat
library(corHMM)
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
library(dentist)
fn_corHMM <- function(par, phy, data, rate.cat){
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1, p = par)
loglik <- corhmm_fit$loglik
neg_loglik <- -loglik
return(neg_loglik)
}
fn_Dredge <- function(par, phy, data, rate.cat){
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1, p = par)
pen <- sum(log(par))
loglik <- corhmm_fit$loglik + pen
neg_loglik <- -loglik
return(neg_loglik)
}
phy$edge.length <- phy$edge.length + 2e-5
dredge_fit_1 <- corHMM:::corHMMDredge(phy = phy, data = data, 1, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps)
dredge_fit_1
dredge_fit_2 <- corHMM:::corHMMDredge(phy = phy, data = data, 2, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps)
dredge_fit_2
dredge_fit_1
# corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 2)
dredge_fit_3 <- corHMM:::corHMMDredge(phy = phy, data = data, 3, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps)
dredge_fit_3
dredge_fit_1
dredge_fit_2
dredge_fit_3
par(mar=c(.1,.1,.1,.1))
plotRECON(dredge_fit_2$phy, dredge_fit_2$states, pie.cex = 1)
par(mar=c(.1,.1,.1,.1), mfrow=c(1,3))
plotRECON(dredge_fit_2$phy, dredge_fit_1$states, pie.cex = 1, show.tip.label = FALSE)
plotRECON(dredge_fit_2$phy, dredge_fit_2$states, pie.cex = 1, show.tip.label = FALSE)
plotRECON(dredge_fit_2$phy, dredge_fit_3$states, pie.cex = 1, show.tip.label = FALSE)
dev.off()
plotRECON(dredge_fit_2$phy, dredge_fit_3$states, pie.cex = 1, show.tip.label = FALSE)
dredge_fit_3$states
dredge_fit_2$states
dredge_fit_1$states
apply(dredge_fit_1$states, 1, which.max)
apply(dredge_fit_2$states, 1, which.max)
apply(dredge_fit_3$states, 1, which.max)
cbind(
d1 = apply(dredge_fit_1$states, 1, which.max),
d2 = apply(dredge_fit_2$states, 1, which.max),
d3 = apply(dredge_fit_3$states, 1, which.max)
)
dredge_fit_3
dredge_fit_1
dredge_fit_2
corHMM:::getModelTable(list(dredge_fit_1, dredge_fit_2, dredge_fit_3))
dredge_fit_2
# corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 2)
dredge_fit_4 <- corHMM:::corHMMDredge(phy = phy, data = data, 4, nstarts = 10, n.cores = 10, lower.bound = .Machine$double.eps)
dredge_fit_4
plotRECON(dredge_fit_2$phy, dredge_fit_3$states, pie.cex = 1, show.tip.label = FALSE)
plotRECON(dredge_fit_2$phy, dredge_fit_4$states, pie.cex = 1, show.tip.label = FALSE)
d4 = apply(dredge_fit_3$states, 1, which.max)
d4
cbind(
d1 = apply(dredge_fit_1$states, 1, which.max),
d2 = apply(dredge_fit_2$states, 1, which.max),
d3 = apply(dredge_fit_3$states, 1, which.max),
d4 = apply(dredge_fit_3$states, 1, which.max)
)
dredge_fit_4
dredge_fit_3
corHMM:::getModelTable(list(dredge_fit_1, dredge_fit_2, dredge_fit_3, dredge_fit_4))
getModelTable
corHMM:::getModelTable
dredge_fit_1
tree <- makeSimmap(tree = dredge_fit_2$phy, dredge_fit_2$data, dredge_fit_3$solution, 3, "maddfitz")
phytools:::plotSimmap(tree[[1]])
dredge_fit_3$solution
tree <- makeSimmap(tree = dredge_fit_2$phy, dredge_fit_2$data, dredge_fit_1$solution, 3, "maddfitz")
phytools:::plotSimmap(tree[[1]])
tree <- makeSimmap(tree = dredge_fit_2$phy, dredge_fit_2$data, dredge_fit_1$solution, 1, "maddfitz")
phytools:::plotSimmap(tree[[1]])
?phytools:::plotSimmap(tree[[1]])
trees <- makeSimmap(tree = dredge_fit_2$phy, dredge_fit_2$data, dredge_fit_1$solution, 1, "maddfitz", nSim = 100)
phytools:::densityMap(trees)
warnings()
trees
trees[[1]]
trees[[2]]
trees[[3]]
phytools:::densityMap
debug(phytools:::densityMap)
phytools:::densityMap(trees)
h
trees
trees
ss
is.null(states)
ss
ss
undebug(phytools:::densityMap)
dredge_fit_1$solution
rownames(dredge_fit_1$solution)
phytools:::densityMap(trees, states = rownames(dredge_fit_1$solution))
warnings()
debug(phytools:::densityMap)
phytools:::densityMap(trees, states = rownames(dredge_fit_1$solution))
hasArg(states)
states
is.null(states)
ss
ss == c("0", "1")
all(ss == c("0", "1")
)
c1
paste(sample(c(letters, LETTERS), 6), collapse = "")
mergeMappedStates
ss == c("0", "1")
all(ss == c("0", "1")
all(ss == c("0", "1"))
all(ss == c("0", "1"))
all(ss == c("0", "1"))
!all(ss == c("0", "1"))
!all(ss == c("0", "1"))
!all(ss == c("0", "1"))
!all(ss == c("0", "1"))
YY
warnings()
YY
warnings()
undebug(phytools:::densityMap)
phytools:::plotSimmap
phytools:::plotSimmap(trees, states = rownames(dredge_fit_1$solution))
phytools:::plotSimmap(trees)
trees <- makeSimmap(tree = dredge_fit_2$phy, dredge_fit_2$data, dredge_fit_2$solution, 2, "maddfitz", nSim = 100)
phytools:::plotSimmap(trees)
?phytools:::plotSimmap(trees)
phytools:::describe.simmap(trees)
trees <- makeSimmap(tree = dredge_fit_2$phy, dredge_fit_2$data, dredge_fit_1$solution, 1, "maddfitz", nSim = 100)
phytools:::describe.simmap(trees)
trees <- makeSimmap(tree = dredge_fit_2$phy, dredge_fit_2$data, dredge_fit_1$solution, 1, "maddfitz", nSim = 500)
phytools:::describe.simmap(trees)
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1)
trees <- makeSimmap(tree = dredge_fit_2$phy, dredge_fit_2$data, corhmm_fit$solution, 1, "maddfitz", nSim = 500)
phytools:::describe.simmap(trees)
trees
corhmm_fit$solution
corhmm_fit <- corHMM(phy = phy, data = data, rate.cat = 1, root.p="maddfitz")
corhmm_fit
trees <- makeSimmap(tree = dredge_fit_2$phy, dredge_fit_2$data, corhmm_fit$solution, 1, "maddfitz", nSim = 100)
phytools:::describe.simmap(trees)
trees <- makeSimmap(tree = dredge_fit_2$phy, dredge_fit_2$data, dredge_fit_1$solution, 1, "maddfitz", nSim = 100)
phytools:::describe.simmap(trees)
library(corHMM)
setwd("corhmm-dredge/")
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
corhmm_fit <- corHMM(phy = phy,
data = data,
rate.cat = 1,
root.p="madfitz",
collapse = TRUE)
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy,
data = data,
max.rate.cat = 1,
pen_type = "l1",
root.p="madfitz")
corhmm_fit_l1
corhmm_fit
corhmm_fit
corhmm_fit_l1
library(corHMM)
setwd("corhmm-dredge/")
data(primates)
phy <- multi2di(primates[[1]])
data <- primates[[2]]
corhmm_fit <- corHMM(phy = phy,
data = data,
rate.cat = 1,
root.p="madfitz",
collapse = TRUE)
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy,
data = data,
max.rate.cat = 1,
pen_type = "l1",
root.p="madfitz")
corhmm_fit_l1
corhmm_fit
corhmm_fit_l1
corHMM:::corHMMDredge(phy = phy,
data = data,
max.rate.cat = 1,
pen_type = "l1",
root.p="madfitz")
corHMM:::corHMMDredge(phy = phy,
data = data,
max.rate.cat = 1,
pen_type = "l1",
root.p="madfitz")
corHMM:::corHMMDredge(phy = phy,
data = data,
max.rate.cat = 1,
pen_type = "l1",
root.p="madfitz")
corhmm_fit_l1
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy,
data = data,
max.rate.cat = 1,
pen_type = "l1",
root.p="madfitz")
corhmm_fit_l1
l1_profile <- corHMM:::get_batch_profile_lik(corhmm_obj = corhmm_fit_l1,
range_factor = 10000,
n_points = 20,
ncores = 10,
dredge = TRUE)
corHMM:::plot_batch_profile_lik(l1_profile, ylim = c(-55, -40))
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy,
data = data,
max.rate.cat = 1,
pen_type = "l1",
root.p="maddfitz")
corhmm_fit_l1
corhmm_profile <- corHMM:::get_batch_profile_lik(corhmm_obj = corhmm_fit,
range_factor = 10000,
n_points = 20,
ncores = 10,
dredge = FALSE)
corHMM:::plot_batch_profile_lik(corhmm_profile, ylim = c(-55, -40))
corHMM:::plot_batch_profile_lik(corhmm_profile)
corHMM:::plot_batch_profile_lik(l1_profile)
corHMM:::plot_batch_profile_lik(l1_profile, ylim = c(-55, -40))
corHMM:::plot_batch_profile_lik(corhmm_profile)
corHMM:::plot_batch_profile_lik(corhmm_profile, ylim = c(-100, -40))
corHMM:::plot_batch_profile_lik(l1_profile, ylim = c(-100, -40))
corhmm_fit
corhmm_fit_l1
corhmm_fit_ard <- corHMM(phy = phy, data = data, rate.cat = 1, root.p="maddfitz")
corhmm_fit_er <- corHMM(phy = phy, data = data, rate.cat = 1, root.p="maddfitz", model="ER")
corhmm_fit_er
corhmm_fit_l1
corhmm_fit_ard
corhmm_fit_er
corhmm_fit_ard
-2 * (corhmm_fit_er$loglik-corhmm_fit_ard$loglik)
chisq.test(-2 * (corhmm_fit_er$loglik-corhmm_fit_ard$loglik))
LR = -2 * (corhmm_fit_er$loglik-corhmm_fit_ard$loglik)
LR
corhmm_fit_er$index.mat
DF = max(corhmm_fit_ard$loglik, na.rm=TRUE) - max(corhmm_fit_er$index.mat, na.rm=TRUE)
DF
DF = max(corhmm_fit_ard$index.mat, na.rm=TRUE) - max(corhmm_fit_er$index.mat, na.rm=TRUE)
DF
p_value = pchisq(LR, DF, lower.tail = FALSE)
p_value
corhmm_fit_l1
corhmm_fit_er
corhmm_fit_ard
corhmm_fit_l1
corhmm_fit_l1
corhmm_fit_er
corhmm_fit_ard
get_rate_mats
index_mat
get_rate_mats
source("code/utils.R")
get_rate_mats
get_rate_mats
get_rate_mat <- function(index_mat, pars){
rate_mat <- index_mat$full_rate_mat
for(j in 1:length(pars)){
par_index <- which(rate_index_mat == j, arr.ind = TRUE)
for(k in 1:nrow(par_index)){
rate_mat[par_index[k,1], par_index[k,2]] <- unlist(pars[j])
}
}
diag(rate_mat) <- -rowSums(rate_mat)
return(rate_mat)
}
index_mat
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=1)
index_mat
get_rate_mat(index_mat, c(.1, 1))
get_rate_mat <- function(index_mat, pars){
rate_index_mat <- index_mat$full_rate_mat
rate_mat <- index_mat$full_rate_mat
for(j in 1:length(pars)){
par_index <- which(rate_index_mat == j, arr.ind = TRUE)
for(k in 1:nrow(par_index)){
rate_mat[par_index[k,1], par_index[k,2]] <- unlist(pars[j])
}
}
diag(rate_mat) <- -rowSums(rate_mat)
return(rate_mat)
}
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=1)
get_rate_mat(index_mat, c(.1, 1))
rate_mat <- get_rate_mat(index_mat, c(.1, 1))
rate_mat
get_sim_data
get_formatted_data
library(geiger)
phy <- sim.bdtree()
phy
plot(phy)
dev.off()
plot(phy)
rate_mat
get_sim_data(phy, rate_mat, index_mat)
library(MASS)
get_sim_data(phy, rate_mat, index_mat)
sim_data <- get_sim_data(phy, rate_mat, index_mat)
cor_data <- get_formatted_data(sim_data, index_mat)
cor_data
get_formatted_data
sim_data
get_formatted_data
sim_data$TipStates
cor_data <- get_formatted_data(sim_data, index_mat)
cor_data <- get_formatted_data(sim_data, index_mat)
cor_data
debug(get_formatted_data)
get_formatted_data(sim_data, index_mat)
tip_data
tip_states
index_mat$legend
tip_states
tip_data
as.factor(tip_data)
levls(as.factor(tip_data))
levels(as.factor(tip_data))
source("~/corhmm-dredge/code/utils.R")
get_formatted_data(sim_data, index_mat)
cor_data <- get_formatted_data(sim_data, index_mat)
cor_data
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=1)
rate_mat <- get_rate_mat(index_mat, c(.1, .1))
sim_data <- get_sim_data(phy, rate_mat, index_mat)
cor_data <- get_formatted_data(sim_data, index_mat)
cor_data
# standard model fitting
corhmm_fit_ard <- corHMM(phy = phy, data = cor_data, rate.cat = 1, root.p="maddfitz")
corhmm_fit_er <- corHMM(phy = phy, data = cor_data, rate.cat = 1, root.p="maddfitz", model="ER")
# dredging
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = cor_data, max.rate.cat = 1, pen_type = "l1", root.p="maddfitz")
corhmm_fit_l1
corhmm_fit_er
corhmm_fit_ard
corhmm_fit_er
corhmm_fit_ard
LR = -2 * (corhmm_fit_er$loglik-corhmm_fit_ard$loglik)
DF = max(corhmm_fit_ard$index.mat, na.rm=TRUE) - max(corhmm_fit_er$index.mat, na.rm=TRUE)
p_value = pchisq(LR, DF, lower.tail = FALSE)
p_value
corhmm_fit_l1
corhmm_fit_er
corhmm_fit_ard
# model averaging
mod_table corHMM:::getModelTable(list(corhmm_fit_er, corhmm_fit_ard))
# model averaging
mod_table <- corHMM:::getModelTable(list(corhmm_fit_er, corhmm_fit_ard))
mod_table
corhmm_fit_er$solution * 1
(corhmm_fit_er$solution * mod_table$AICwt[1]) + (corhmm_fit_ard$solution * mod_table$AICwt[2])
avg_solution <- (corhmm_fit_er$solution * mod_table$AICwt[1]) + (corhmm_fit_ard$solution * mod_table$AICwt[2])
# dredging
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = cor_data, max.rate.cat = 1, pen_type = "l1", root.p="maddfitz")
print(avg_solution)
print(corhmm_fit_l1$solution)
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=1)
rate_mat <- get_rate_mat(index_mat, c(.5, .5))
sim_data <- get_sim_data(phy, rate_mat, index_mat)
cor_data <- get_formatted_data(sim_data, index_mat)
# LRT
corhmm_fit_ard <- corHMM(phy = phy, data = cor_data, rate.cat = 1, root.p="maddfitz")
corhmm_fit_er <- corHMM(phy = phy, data = cor_data, rate.cat = 1, root.p="maddfitz", model="ER")
LR = -2 * (corhmm_fit_er$loglik-corhmm_fit_ard$loglik)
DF = max(corhmm_fit_ard$index.mat, na.rm=TRUE) - max(corhmm_fit_er$index.mat, na.rm=TRUE)
p_value = pchisq(LR, DF, lower.tail = FALSE)
print(p_value)
# model averaging
mod_table <- corHMM:::getModelTable(list(corhmm_fit_er, corhmm_fit_ard))
avg_solution <- (corhmm_fit_er$solution * mod_table$AICwt[1]) + (corhmm_fit_ard$solution * mod_table$AICwt[2])
print(avg_solution)
# dredging
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = cor_data, max.rate.cat = 1, pen_type = "l1", root.p="maddfitz")
print(corhmm_fit_l1$solution)
corhmm_fit_er
corhmm_fit_ard
corhmm_fit_er
rate_mat <- get_rate_mat(index_mat, c(1, 1))
sim_data <- get_sim_data(phy, rate_mat, index_mat)
cor_data <- get_formatted_data(sim_data, index_mat)
# LRT
corhmm_fit_ard <- corHMM(phy = phy, data = cor_data, rate.cat = 1, root.p="maddfitz")
corhmm_fit_er <- corHMM(phy = phy, data = cor_data, rate.cat = 1, root.p="maddfitz", model="ER")
LR = -2 * (corhmm_fit_er$loglik-corhmm_fit_ard$loglik)
DF = max(corhmm_fit_ard$index.mat, na.rm=TRUE) - max(corhmm_fit_er$index.mat, na.rm=TRUE)
p_value = pchisq(LR, DF, lower.tail = FALSE)
print(p_value)
# model averaging
mod_table <- corHMM:::getModelTable(list(corhmm_fit_er, corhmm_fit_ard))
avg_solution <- (corhmm_fit_er$solution * mod_table$AICwt[1]) + (corhmm_fit_ard$solution * mod_table$AICwt[2])
print(avg_solution)
# dredging
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = cor_data, max.rate.cat = 1, pen_type = "l1", root.p="maddfitz")
print(corhmm_fit_l1$solution)
rate_mat <- get_rate_mat(index_mat, c(10, 10))
sim_data <- get_sim_data(phy, rate_mat, index_mat)
cor_data <- get_formatted_data(sim_data, index_mat)
# LRT
corhmm_fit_ard <- corHMM(phy = phy, data = cor_data, rate.cat = 1, root.p="maddfitz")
corhmm_fit_er <- corHMM(phy = phy, data = cor_data, rate.cat = 1, root.p="maddfitz", model="ER")
LR = -2 * (corhmm_fit_er$loglik-corhmm_fit_ard$loglik)
DF = max(corhmm_fit_ard$index.mat, na.rm=TRUE) - max(corhmm_fit_er$index.mat, na.rm=TRUE)
p_value = pchisq(LR, DF, lower.tail = FALSE)
print(p_value)
# model averaging
mod_table <- corHMM:::getModelTable(list(corhmm_fit_er, corhmm_fit_ard))
avg_solution <- (corhmm_fit_er$solution * mod_table$AICwt[1]) + (corhmm_fit_ard$solution * mod_table$AICwt[2])
print(avg_solution)
# dredging
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = cor_data, max.rate.cat = 1, pen_type = "l1", root.p="maddfitz")
print(corhmm_fit_l1$solution)
index_mat <- get_index_mat(nChar=1, nStates=2, nRateClass=1)
rate_mat <- get_rate_mat(index_mat, c(.1, .5))
sim_data <- get_sim_data(phy, rate_mat, index_mat)
cor_data <- get_formatted_data(sim_data, index_mat)
# LRT
corhmm_fit_ard <- corHMM(phy = phy, data = cor_data, rate.cat = 1, root.p="maddfitz")
corhmm_fit_er <- corHMM(phy = phy, data = cor_data, rate.cat = 1, root.p="maddfitz", model="ER")
LR = -2 * (corhmm_fit_er$loglik-corhmm_fit_ard$loglik)
DF = max(corhmm_fit_ard$index.mat, na.rm=TRUE) - max(corhmm_fit_er$index.mat, na.rm=TRUE)
p_value = pchisq(LR, DF, lower.tail = FALSE)
print(p_value)
# model averaging
mod_table <- corHMM:::getModelTable(list(corhmm_fit_er, corhmm_fit_ard))
avg_solution <- (corhmm_fit_er$solution * mod_table$AICwt[1]) + (corhmm_fit_ard$solution * mod_table$AICwt[2])
print(avg_solution)
# dredging
corhmm_fit_l1 <- corHMM:::corHMMDredge(phy = phy, data = cor_data, max.rate.cat = 1, pen_type = "l1", root.p="maddfitz")
print(corhmm_fit_l1$solution)
